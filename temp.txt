 app.get('/orders', verifyJWT, async (req, res) => {
            const decoded = req.decoded;
            console.log('inside orders api', decoded)

            if (decoded.email !== req.query.email) {
                res.status(403).send({ message: 'Unauthorized Access' })
            }
            let query = {};
            // 
            if (req.query.email) {
                query = { email: req.query.email }
            }

            const cursor = reviewCollection.find(query)
            const orders = await cursor.toArray();
            res.send(orders);
        })


        app.post('/orders', async (req, res) => {
            const order = req.body;
            const result = await reviewCollection.insertOne(order);
            res.send(result);
        })


        app.patch('/orders/:id', verifyJWT, async (req, res) => {
            const id = req.params.id;
            const status = req.body.status
            const query = { _id: ObjectId(id) };
            const updatedDoc = {
                $set: {
                    status: status
                }
            }

            const result = await reviewCollection.updateOne(query, updatedDoc);
            res.send(result);
        })


        app.delete('/orders/:id', verifyJWT, async (req, res) => {
            const id = req.params.id;
            const query = { _id: ObjectId(id) };
            const result = await reviewCollection.deleteOne(query)
            res.send(result);
        })